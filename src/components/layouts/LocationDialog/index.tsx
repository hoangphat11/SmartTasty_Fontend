"use client";

import { useState } from "react";
import {
  Dialog,
  DialogTitle,
  DialogContent,
  DialogActions,
  Button,
  Typography,
} from "@mui/material";

export default function LoginPage() {
  const [isLogin, setIsLogin] = useState(false);
  const [openDialog, setOpenDialog] = useState(false);

  const handleLogin = async () => {
    // üöÄ gi·∫£ s·ª≠ login th√†nh c√¥ng
    setIsLogin(true);
    // M·ªü popup h·ªèi quy·ªÅn v·ªã tr√≠
    setOpenDialog(true);
  };

  const handleAllowLocation = () => {
    setOpenDialog(false);

    if ("geolocation" in navigator) {
      navigator.geolocation.getCurrentPosition(
        (pos) => {
          const lat = pos.coords.latitude;
          const lng = pos.coords.longitude;
          console.log("V·ªã tr√≠ hi·ªán t·∫°i:", lat, lng);

          // G·ªçi API l·∫•y danh s√°ch nh√† h√†ng g·∫ßn nh·∫•t
          fetch(`/api/restaurants/nearby?lat=${lat}&lng=${lng}`)
            .then((res) => res.json())
            .then((data) => {
              console.log("Nh√† h√†ng g·∫ßn b·∫°n:", data);
            });
        },
        (err) => {
          console.error("Ng∆∞·ªùi d√πng t·ª´ ch·ªëi ho·∫∑c l·ªói:", err);
        }
      );
    } else {
      console.error("Tr√¨nh duy·ªát kh√¥ng h·ªó tr·ª£ geolocation");
    }
  };

  return (
    <>
      {!isLogin ? (
        <Button variant="contained" onClick={handleLogin}>
          ƒêƒÉng nh·∫≠p
        </Button>
      ) : (
        <Typography>Ch√†o m·ª´ng b·∫°n ƒë√£ ƒëƒÉng nh·∫≠p!</Typography>
      )}

      {/* Dialog h·ªèi quy·ªÅn v·ªã tr√≠ */}
      <Dialog open={openDialog} onClose={() => setOpenDialog(false)}>
        <DialogTitle>B·∫°n c√≥ mu·ªën xem k·∫øt qu·∫£ g·∫ßn v·ªã tr√≠ c·ªßa m√¨nh h∆°n kh√¥ng?</DialogTitle>
        <DialogContent>
          <Typography>
            ƒê·ªÉ nh·∫≠n ƒë∆∞·ª£c k·∫øt qu·∫£ t√¨m ki·∫øm g·∫ßn nh·∫•t, h√£y cho ph√©p ·ª©ng d·ª•ng s·ª≠ d·ª•ng v·ªã tr√≠ ch√≠nh x√°c
            c·ªßa thi·∫øt b·ªã.
          </Typography>
        </DialogContent>
        <DialogActions>
          <Button variant="outlined" onClick={() => setOpenDialog(false)}>
            ƒê·ªÉ sau
          </Button>
          <Button variant="contained" onClick={handleAllowLocation}>
            S·ª≠ d·ª•ng v·ªã tr√≠ ch√≠nh x√°c
          </Button>
        </DialogActions>
      </Dialog>
    </>
  );
}
